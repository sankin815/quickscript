{"version":3,"file":"extension.js","mappings":"28BA0DA,oBAAyBA,GACvB,IAAIC,EAAaC,EAAOC,SAASC,gBAC/B,gBACAC,MAAOC,IACL,MAAMC,EAAmBL,EAAOM,UAAUD,iBAC1C,IAAKA,EAEH,YADAE,EAAiB,WAInB,MAAMC,EAAkBJ,EACpBA,EAAIK,OACJT,EAAOU,OAAOC,kBAAkBC,SAASR,IAAIK,OAK3CI,EAnEZ,SAAgCC,GAC9B,IAAIC,EAAMD,EACV,KAAOC,IAAQ,UAAKC,MAAMD,GAAKE,MAAM,CACnC,MAAMJ,EAAkB,UAAKK,KAAKH,EAAK,gBACvC,GAAI,UAAGI,WAAWN,GAChB,OAAOA,EAETE,EAAM,UAAKK,QAAQL,EACrB,CACA,OAAO,IACT,CAyD8BM,CAJAb,EACpB,UAAKY,QAAQZ,GACbH,EAAiB,GAAGD,IAAIK,QAG5B,IAAKI,EAEH,YADAN,EAAiB,wBAInB,MAAMe,EAAcC,KAAKP,MAAM,UAAGQ,aAAaX,EAAiB,SAC1DY,EAAUH,EAAYG,QACtBC,EAAkBJ,EAAYK,KACpC,IAAKF,EAEH,YADAlB,EAAiB,yBAInB,MAAMqB,EAAaC,OAAOC,KAAKL,GACzBM,QAAuBC,EAAcJ,EAAY,CACrDK,YAAa,aAGVF,SAzEX5B,gBAA4B,WAC1B+B,EAAU,gBACVrB,EAAe,gBACfa,IAMA,MAAMS,EAAa,UAAKf,QAAQP,GAC1BuB,EAAeV,EAAkB,IAAMQ,EACvCG,EACW,YAAfH,EAA2B,QAAQA,IAAe,WAAWA,IAEzDI,EAAO,IAAItC,EAAOuC,KACtB,CAAEC,KAAM,SACRxC,EAAOyC,UAAUC,UACjBN,EACA,SACA,IAAIpC,EAAO2C,eAAeN,EAAY,GAAI,CACxCO,IAAKT,KAITG,EAAKO,oBAAsB,CAEzBC,OAAQ9C,EAAO+C,eAAeC,OAE9BC,OAAO,EACPC,MAAM,EACNC,OAAO,EACPC,MAAOpD,EAAOqD,cAAcC,WAG9BtD,EAAOuD,MAAMC,YAAYlB,EAC3B,CA0CYmB,CAAa,CACjBvB,WAAYH,EACZlB,kBACAa,mBACA,IAIN,MAAMgC,EAAU1D,EAAOuD,MAAMI,qBAAqBC,IAChD,MAAMC,EAAWD,EAAEE,UAAUxB,KAAKX,KAGjB,IAFAiC,EAAEG,UAGjBC,EAAuB,SAASH,WAClC,IAGF/D,EAAQmE,cAAcC,KAAKR,GAE3B5D,EAAQmE,cAAcC,KAAKnE,EAC7B,EAEA,wBAA8B,EAxH9B,kBACA,YACA,aAEM,iBAAEQ,EAAgB,cAAEyB,EAAa,uBAAEgC,GACvChE,EAAOU,M,UCLTyD,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,K,UCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://quickscript/./src/extension.ts","webpack://quickscript/external commonjs \"vscode\"","webpack://quickscript/external node-commonjs \"fs\"","webpack://quickscript/external node-commonjs \"path\"","webpack://quickscript/webpack/bootstrap","webpack://quickscript/webpack/startup"],"sourcesContent":["import * as vscode from \"vscode\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nconst { showErrorMessage, showQuickPick, showInformationMessage } =\n  vscode.window;\n\n// 递归查找最近的 package.json\nfunction findNearestPackageJson(startPath: string) {\n  let dir = startPath;\n  while (dir !== path.parse(dir).root) {\n    const packageJsonPath = path.join(dir, \"package.json\");\n    if (fs.existsSync(packageJsonPath)) {\n      return packageJsonPath;\n    }\n    dir = path.dirname(dir);\n  }\n  return null;\n}\n\n// 执行 npm run 脚本\nasync function runNpmScript({\n  scriptName,\n  packageJsonPath,\n  packageJsonName,\n}: {\n  scriptName: string;\n  packageJsonPath: string;\n  packageJsonName: string;\n}) {\n  const projectDir = path.dirname(packageJsonPath);\n  const terminalName = packageJsonName + \"/\" + scriptName;\n  const scriptCode =\n    scriptName === \"codegen\" ? `yarn ${scriptName}` : `npm run ${scriptName}`;\n\n  const task = new vscode.Task(\n    { type: \"shell\" }, // 类型\n    vscode.TaskScope.Workspace, // 任务作用域\n    terminalName, // 任务名\n    \"custom\", // 自定义来源名\n    new vscode.ShellExecution(scriptCode, [], {\n      cwd: projectDir,\n    })\n  );\n\n  task.presentationOptions = {\n    // 只有出现错误时才自动打开终端\n    reveal: vscode.TaskRevealKind.Silent,\n    // 控制显示任务输出的面板是否获得焦点。\n    focus: true, // 将焦点切换到当前终端\n    echo: false, // 不显示命令输出\n    close: true, // 执行成功后自动关闭\n    panel: vscode.TaskPanelKind.Dedicated,\n  };\n\n  vscode.tasks.executeTask(task);\n}\n\nexport function activate(context: vscode.ExtensionContext) {\n  let disposable = vscode.commands.registerCommand(\n    \"quick-script\",\n    async (uri: vscode.Uri) => {\n      const workspaceFolders = vscode.workspace.workspaceFolders;\n      if (!workspaceFolders) {\n        showErrorMessage(\"没有找到工作区\");\n        return;\n      }\n\n      const currentFilePath = uri\n        ? uri.fsPath\n        : vscode.window.activeTextEditor?.document.uri.fsPath;\n      const searchStartPath = currentFilePath\n        ? path.dirname(currentFilePath)\n        : workspaceFolders[0].uri.fsPath;\n\n      const packageJsonPath = findNearestPackageJson(searchStartPath);\n      if (!packageJsonPath) {\n        showErrorMessage(\"在项目中找不到 package.json\");\n        return;\n      }\n\n      const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\n      const scripts = packageJson.scripts;\n      const packageJsonName = packageJson.name;\n      if (!scripts) {\n        showErrorMessage(\"在 package.json 中找不到脚本\");\n        return;\n      }\n\n      const scriptKeys = Object.keys(scripts);\n      const selectedScript = await showQuickPick(scriptKeys, {\n        placeHolder: \"选择一条指令执行\",\n      });\n\n      if (!selectedScript) {\n        return;\n      }\n\n      await runNpmScript({\n        scriptName: selectedScript,\n        packageJsonPath,\n        packageJsonName,\n      });\n    }\n  );\n\n  const taskEnd = vscode.tasks.onDidEndTaskProcess((e) => {\n    const taskName = e.execution.task.name;\n    const exitCode = e.exitCode;\n\n    if (exitCode === 0) {\n      showInformationMessage(`✅ 任务 \"${taskName}\" 已成功完成`);\n    }\n  });\n\n  context.subscriptions.push(taskEnd);\n\n  context.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","disposable","vscode","commands","registerCommand","async","uri","workspaceFolders","workspace","showErrorMessage","currentFilePath","fsPath","window","activeTextEditor","document","packageJsonPath","startPath","dir","parse","root","join","existsSync","dirname","findNearestPackageJson","packageJson","JSON","readFileSync","scripts","packageJsonName","name","scriptKeys","Object","keys","selectedScript","showQuickPick","placeHolder","scriptName","projectDir","terminalName","scriptCode","task","Task","type","TaskScope","Workspace","ShellExecution","cwd","presentationOptions","reveal","TaskRevealKind","Silent","focus","echo","close","panel","TaskPanelKind","Dedicated","tasks","executeTask","runNpmScript","taskEnd","onDidEndTaskProcess","e","taskName","execution","exitCode","showInformationMessage","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}